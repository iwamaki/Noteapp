openapi: 3.0.3
info:
  title: NoteApp API
  description: |-
    NoteAppのフロントエンドとバックエンド間のAPI仕様書。
    LLMとの連携、チャット機能、プロバイダー管理などを定義します。
  version: 1.0.0
servers:
  - url: http://localhost:8000
    description: Local development server
paths:
  /api/chat:
    post:
      summary: チャットメッセージを処理
      description: ユーザーからのメッセージを受け取り、設定されたLLMプロバイダーを通じて応答を生成します。
      tags:
        - Chat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequest'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponse'
        '500':
          description: 内部サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: チャットメッセージを処理 (テスト用)
      description: GETリクエストでチャットメッセージを処理します。主にテストやデバッグ用途です。
      tags:
        - Chat
      parameters:
        - name: message
          in: query
          required: true
          schema:
            type: string
          description: ユーザーからのメッセージ
        - name: provider
          in: query
          required: false
          schema:
            type: string
            default: openai
          description: 使用するLLMプロバイダー
        - name: model
          in: query
          required: false
          schema:
            type: string
            default: gpt-3.5-turbo
          description: 使用するLLMモデル
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponse'
        '500':
          description: 内部サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/llm-providers:
    get:
      summary: 利用可能なLLMプロバイダーを取得
      description: サーバー側で設定されている、利用可能なLLMプロバイダーの一覧を返します。
      tags:
        - LLM Providers
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/LLMProvider'

  /api/health:
    get:
      summary: ヘルスチェック
      description: APIサーバーと、設定されているLLMプロバイダーの稼働状況を返します。
      tags:
        - Health Check
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthStatus'

components:
  schemas:
    ChatRequest:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: ユーザーからのチャットメッセージ
        provider:
          type: string
          description: 使用するLLMプロバイダー
          default: openai
        model:
          type: string
          description: 使用するLLMモデル
          default: gpt-3.5-turbo
        context:
          $ref: '#/components/schemas/ChatContext'

    ChatResponse:
      type: object
      properties:
        message:
          type: string
          description: LLMからの応答メッセージ
        commands:
          type: array
          items:
            $ref: '#/components/schemas/LLMCommand'
          description: フロントエンドで実行すべきコマンドのリスト
        provider:
          type: string
          description: 応答を生成したLLMプロバイダー
        model:
          type: string
          description: 応答を生成したLLMモデル
        historyCount:
          type: integer
          description: 現在の会話履歴の数

    ChatContext:
      type: object
      properties:
        currentPath:
          type: string
        fileList:
          type: array
          items:
            type: object
        currentFile:
          type: string
        currentFileContent:
          type: object
          properties:
            filename:
              type: string
            content:
              type: string
        conversationHistory:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessage'

    ChatMessage:
      type: object
      properties:
        role:
          type: string
          enum: [user, ai, system]
        content:
          type: string
        timestamp:
          type: string
          format: date-time

    LLMCommand:
      type: object
      properties:
        action:
          type: string
          description: 実行するアクション名
        path:
          type: string
          description: アクションの対象パス
        content:
          type: string
          description: ファイルに書き込む内容など

    LLMProvider:
      type: object
      properties:
        name:
          type: string
        defaultModel:
          type: string
        models:
          type: array
          items:
            type: string
        status:
          type: string
          enum: [available, unavailable, error]

    HealthStatus:
      type: object
      properties:
        status:
          type: string
          enum: [ok, error]
        providers:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/LLMProvider'

    ErrorResponse:
      type: object
      properties:
        detail:
          type: string
          description: エラーの詳細メッセージ
