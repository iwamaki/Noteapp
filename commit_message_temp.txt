feat(note-edit): Refactor to feature-first architecture (Phase 1, Task 1 & 2)

This commit implements the first phase of refactoring the note-edit feature towards a feature-first architecture as outlined in Issue #39.

- Task 1: Create `note-edit` specific storage:
    - Created `app/features/note-edit/noteStorage.ts` to encapsulate note storage operations (`getNoteById`, `createNote`, `updateNote`) for the `note-edit` feature, removing external dependencies.

- Task 2: Refactor `useNoteEditor` hook:
    - Modified `app/features/note-edit/hooks/useNoteEditor.tsx` to remove dependencies on `NoteService` and `noteStore`.
    - Integrated `NoteEditStorage` for all note data fetching, creation, and updating.
    - Updated state management within the hook to use `useState` for `note`, `title`, and `content`.
    - Implemented `navigation.replace` to update the URL with the new note ID upon creation.
    - Ensured `NoteEditScreen.tsx` correctly consumes the updated `useNoteEditor` hook's return values.